function [X, Y, Index] = FindLocalExtrema(DifferenceOfGaussian)
% INPUTS
%   - DiffernceOfGaussian: Cell array of the various differnces of gaussian
%   matrices for each 
% OUTPUTS
%   - X: The X-Coordinates of the local extrema
%   - Y: The Y-Coordinates of the local extrema
%   - Index: Which "layer" in the difference of gaussian the maxima is in

% This function finds the points that are local extrema compared to the 26
% neighbors of the pixel in it's own scale and the two neighboring scales

for i = 2:(length(DifferenceOfGaussian) - 1)
    % Loop through all of the scales
    pre = DifferenceOfGaussian(i-1);
    cur = DifferenceOfGaussian(i);
    nex = DifferenceOfGaussian(i+1);
    
    % Loop through all of the points in the current difference of gaussian
    for j = 2:(length(cur(:,1))-1)
        % Loop through all rows in the difference
        for k = 2:(length(cur(1,:))-1)
            % Loop through all columns in the difference
            p = cur(j,k); % The current point being compared 
            ext = 1; % Assume the point is an extrema until proven otherwise
            isMax = 0; % Assume the point is a max
            isMin = 0; % Assume the point is a min
            
            % Create vectors of the rows to check 
            rows = [j-1 j j+1];
            % Creat a vector of the columns to check
            cols = [k-1 k k+1];

            for r = 1:length(rows)
                row = rows(r);
                for c = 1:length(cols)
                    col = cols(c);
                    if pre(r,c) >
                end
            end
            
            
        end
    end
    
    ext = 1; % Assume the point is an extrema 
    
end

end